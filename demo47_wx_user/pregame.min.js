/*! 2014-06-02 12:10:51 */
function ClassLoad() {
  (this.queue = new createjs.LoadQueue(!0)),
    this.queue.loadManifest([
      {
        id: "load",
        src: "assets/load" + devise_size + ".jpg",
      },
    ]),
    this.queue.addEventListener(
      "complete",
      function () {
        load.Start();
      },
      !1
    );
}

function init() {
  (global_pause = !1),
    // (document.bgColor = "#000"),
    (devise_size =
      window.innerWidth * window.devicePixelRatio < 640 ||
      window.innerHeight * window.devicePixelRatio < 744
        ? 1
        : 2),
    (devise_size = 1),
    (game_area = document.getElementById("game_area")),
    (canvas = document.getElementById("my_canvas")),
    (canvas.width = 320 * devise_size),
    (canvas.height = 480 * devise_size),
    (stage = new createjs.Stage(canvas)),
    (stage.mouseMoveOutside = !0),
    createjs.Touch.enable(stage),
    void 0 !== window.orientation &&
      ((rotate = document.createElement("img")),
      (rotate.id = "img_rotate"),
      (rotate.src = "assets/rotate.png"),
      (rotate.unselectable = "on"),
      document.body.appendChild(rotate)),
    (load = new ClassLoad()),
    ResizeWindow();
}

function StartGame() {
  (game = new ClassGame()),
    (window_controller = new WindowsController()),
    window_controller.Show("mm"),
    //api_game.load_game(),
    createjs.Ticker.setFPS(30),
    createjs.Ticker.addEventListener("tick", Drw);
}

function Drw() {
  global_pause || (window_controller.Drw(), stage.update());
}

function ResizeWindow() {
  Resize(window.innerWidth, window.innerHeight);
}

function Resize(a, b) {
  if (
    (window.scrollTo(0, 1),
    (width = a),
    (height = b),
    void 0 != rotate && width > height)
  ) {
    var c = Math.min(height, Math.min(width, 400));
    (game_area.style.display = "none"),
      (rotate.style.display = "block"),
      (rotate.style.height = c + "px"),
      (rotate.style.width = c + "px"),
      (rotate.style.marginLeft = c / -2 + "px"),
      (rotate.style.marginTop = c / -2 + "px");
  } else {
    var d = width / height,
      e = 640 / 744;
    d >= e
      ? ((width = height * (640 / 744)), (height = (height / 744) * 960))
      : (height = width / (640 / 960)),
      void 0 != rotate && (rotate.style.display = "none"),
      (game_area.style.display = "block"),
      (game_area.style.width = (width << 0) + "px"),
      (game_area.style.height = (height << 0) + "px"),
      (game_area.style.marginLeft = ((-width / 2) << 0) + "px"),
      (game_area.style.marginTop = ((-height / 2) << 0) + "px");
  }
}
(ClassLoad.prototype.Start = function () {
  (this.img_load = new createjs.Bitmap(this.queue.getResult("load"))),
    stage.addChild(this.img_load),
    (this.img_load_progress_s = new createjs.Shape()),
    this.img_load_progress_s.graphics.f("#000").dr(0, 0, 1, 4 * devise_size),
    (this.img_load_progress_s.x = 12 * devise_size),
    (this.img_load_progress_s.y = 338 * devise_size),
    stage.addChild(this.img_load_progress_s),
    (this.img_load_progress = new createjs.Shape()),
    this.img_load_progress.graphics.f("#ff8100").dr(0, 0, 1, 4 * devise_size),
    (this.img_load_progress.x = 10 * devise_size),
    (this.img_load_progress.y = 336 * devise_size),
    stage.addChild(this.img_load_progress),
    this.queue.removeAllEventListeners("complete"),
    this.queue.addEventListener(
      "complete",
      function () {
        load.EndLoad();
      },
      !1
    ),
    this.queue.addEventListener(
      "progress",
      function () {
        load.Drw();
      },
      !1
    ),
    this.queue.loadManifest([
      {
        id: "bg",
        src: "assets/bg" + devise_size + ".jpg",
      },
      {
        id: "menu_bg",
        src: "assets/menu_bg" + devise_size + ".jpg",
      },
      {
        id: "pack",
        src: "assets/pack" + devise_size + ".png",
      },
      {
        id: "font0",
        src: "assets/fnt/font0" + devise_size + ".png",
      },
      {
        id: "font1",
        src: "assets/fnt/font1" + devise_size + ".png",
      },
      {
        id: "gamemin",
        src: "game.min.js?test=38",
        type: createjs.LoadQueue.JAVASCRIPT,
      },
      {
        id: "data",
        src: "assets/data" + devise_size + ".js",
        type: createjs.LoadQueue.JAVASCRIPT,
      },
      {
        id: "fonts",
        src: "assets/fonts" + devise_size + ".js",
        type: createjs.LoadQueue.JAVASCRIPT,
      },
    ]);
}),
  (ClassLoad.prototype.Drw = function () {
    (this.img_load_progress.scaleX =
      (300 * devise_size * this.queue.progress) << 0),
      (this.img_load_progress_s.scaleX =
        (300 * devise_size * this.queue.progress) << 0),
      stage.update();
  }),
  (ClassLoad.prototype.EndLoad = function () {
    stage.removeAllChildren(), CreateFonts(), StartGame();
  }),
  (ClassLoad.prototype.LoadAudio = function () {
    // lock_audio &&
    //   ((lock_audio = !1),
    //   createjs.Sound.registerPlugins([createjs.WebAudioPlugin]),
    //   (audio_supported = createjs.WebAudioPlugin.isSupported()),
    //   audio_supported &&
    //     ((createjs.Sound.alternateExtensions = ["ogg"]),
    //     this.queue.installPlugin(createjs.Sound),
    //     this.queue.removeAllEventListeners(),
    //     this.queue.addEventListener("complete", MusicPlay, !1),
    //     this.queue.loadManifest([
    //       {
    //         id: "death",
    //         src: "assets/audio/death.mp3",
    //         type: createjs.LoadQueue.SOUND,
    //       },
    //       {
    //         id: "up",
    //         src: "assets/audio/up.mp3",
    //         type: createjs.LoadQueue.SOUND,
    //       },
    //       {
    //         id: "music",
    //         src: "assets/audio/music.mp3",
    //         type: createjs.LoadQueue.SOUND,
    //       },
    //     ])));
  });
var game_area,
  canvas,
  stage,
  rotate,
  devise_size,
  width,
  height,
  load,
  game,
  window_controller,
  global_pause;
(window.onpageshow = function () {}), (window.onpagehide = function () {});
